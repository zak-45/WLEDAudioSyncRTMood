# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Tag'
        # Default value if no value is explicitly provided
        default: '1.0'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        # os: [windows-latest,macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Ubuntu specific
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libasound-dev
          sudo apt-get install libasound-dev portaudio19-dev libportaudio2 libportaudiocpp0
          sudo apt-get install ffmpeg
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
      - name: Build Executable
        uses: Nuitka/Nuitka-Action@v0.6
        with:
          nuitka-version: main
          script-name: main.py
          onefile: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
